(* let () = UExist (Variables.of_list ["a1", "a2"], (UExist (Variables.of_list ["a3", "a4"], (UExist (Variables.of_list ["a5", "a6"], (UExist (Variables.of_list ["a7"], UAnd (UMulti ([TyVar], *)
(* let term = Let ("y", Lambda ("x", Var "x"), App (Var "y", Var "y")) *)
(* let term = *)
(*   Let *)
(*     ( PVar "y", *)
(*       Lambda (PVar "x", Var "x"), *)
(*       App *)
(*         ( App *)
(*             ( Lambda (PVar "x", Lambda (PVar "x", Var "x")), *)
(*               App (App (Var "y", Var "y"), Unit) ), *)
(*           App (App (Var "y", Var "y"), Number 0.1) ) ) *)
(**)
(* let term = Let ("y", Lambda ("x", App (Var "x", Unit)), App (Var "y", Var "y")) *)
(* let term = Let ("y", Lambda ("x", App (Var "x", Unit)), Var "y") *)

(* let term = Let ("y", Lambda ("x", Var "x"), Var "y") *)

(* let term = Lambda ("x", App (App (Var "x", Var "x"), App (Var "x", Unit))) *)
(* let term = Lambda ("x", Var "x") *)

(* let term = *)
(*   Lambda *)
(*     ( "f", *)
(*       App *)
(*         ( Lambda ("x", App (Var "f", App (Var "x", Var "x"))), *)
(*           Lambda ("x", App (Var "f", App (Var "x", Var "x"))) ) ) *)
(* let term = Lambda ("x", App (Var "x", App (Var "x", Unit))) *)

(* let term = Let ("y", Lambda ("x", Var "x"),App( Var "y", Ml2.Unit)) *)
